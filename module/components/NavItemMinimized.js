import React, { Component } from 'react';
import styled, { css } from 'styled-components';
export const NavItemMinimized = styled.li.withConfig({
  displayName: "NavItemMinimized",
  componentId: "ngdma4-0"
})(["position:relative;margin:0;transition:background 0.3s ease-in-out;cursor:pointer;overflow:hidden;width:", ";> .sub-nav{position:absolute;left:", ";display:inline;background:", ";transition:none;}> .sub-nav li{border:none;}> .sub-nav a{height:40px;}:hover{overflow:visible;width:", ";}:hover > .sub-nav{max-height:", ";}:hover > a{background:", ";}:hover > a i{color:", ";}", " i{transition:color 0.1s ease-in-out;margin-right:2rem;font-size:1.3em;color:", ";}a{display:flex;align-items:center;padding:0 1rem;height:48px;text-decoration:none !important;color:", " !important;}"], props => [props["sidebar-minimized-width"], (props.theme || {})["sidebar-minimized-width"], `50px`].filter(v => v !== void 0)[0], props => [props["sidebar-minimized-width"], (props.theme || {})["sidebar-minimized-width"], `50px`].filter(v => v !== void 0)[0], props => [props["sidebar-bg"], (props.theme || {})["sidebar-bg"], [props["gray-900"], (props.theme || {})["gray-900"], `#313742`].filter(v => v !== void 0)[0]].filter(v => v !== void 0)[0], props => parseFloat([props["sidebar-minimized-width"], (props.theme || {})["sidebar-minimized-width"], `50px`].filter(v => v !== void 0)[0]) + parseFloat([props["sidebar-width"], (props.theme || {})["sidebar-width"], `200px`].filter(v => v !== void 0)[0]) + (('' + [props["sidebar-minimized-width"], (props.theme || {})["sidebar-minimized-width"], `50px`].filter(v => v !== void 0)[0]).replace(/[\d.-]*/, "") || ('' + [props["sidebar-width"], (props.theme || {})["sidebar-width"], `200px`].filter(v => v !== void 0)[0]).replace(/[\d.-]*/, "")), props => parseFloat([props["count"], (props.theme || {})["count"]].filter(v => v !== void 0)[0]) * parseFloat(40) + "px", props => [props["primary"], (props.theme || {})["primary"], [props["blue"], (props.theme || {})["blue"], `#20a8d8`].filter(v => v !== void 0)[0]].filter(v => v !== void 0)[0], props => [props["white"], (props.theme || {})["white"], `#fff`].filter(v => v !== void 0)[0], props => props.active && css(["color:", ";background:", ";"], props => [props["sidebar-nav-link-active-color"], (props.theme || {})["sidebar-nav-link-active-color"], [props["white"], (props.theme || {})["white"], `#fff`].filter(v => v !== void 0)[0]].filter(v => v !== void 0)[0], props => require('tinycolor2')([props["sidebar-bg"], (props.theme || {})["sidebar-bg"], [props["gray-900"], (props.theme || {})["gray-900"], `#313742`].filter(v => v !== void 0)[0]].filter(v => v !== void 0)[0]).lighten(parseFloat(`5%`)).toHex8String()), props => !![props["active"], (props.theme || {})["active"]].filter(v => v !== void 0)[0] ? [props["primary"], (props.theme || {})["primary"], [props["blue"], (props.theme || {})["blue"], `#20a8d8`].filter(v => v !== void 0)[0]].filter(v => v !== void 0)[0] : [props["gray-500"], (props.theme || {})["gray-500"], `#a0a9b8`].filter(v => v !== void 0)[0], props => [props["white"], (props.theme || {})["white"], `#fff`].filter(v => v !== void 0)[0]);